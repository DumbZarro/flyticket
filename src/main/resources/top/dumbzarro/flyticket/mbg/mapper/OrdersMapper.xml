<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.dumbzarro.flyticket.mbg.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="top.dumbzarro.flyticket.mbg.model.Orders">
    <id column="orders_id" jdbcType="INTEGER" property="ordersId" />
    <result column="flight_id" jdbcType="INTEGER" property="flightId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="cost" jdbcType="INTEGER" property="cost" />
    <result column="order_t" jdbcType="TIMESTAMP" property="orderT" />
    <result column="pay_state" jdbcType="BIT" property="payState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orders_id, flight_id, person_id, cost, order_t, pay_state
  </sql>
  <select id="selectByExample" parameterType="top.dumbzarro.flyticket.mbg.model.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.dumbzarro.flyticket.mbg.model.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.dumbzarro.flyticket.mbg.model.Orders">
    <selectKey keyProperty="ordersId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders (flight_id, person_id, cost, 
      order_t, pay_state)
    values (#{flightId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{cost,jdbcType=INTEGER}, 
      #{orderT,jdbcType=TIMESTAMP}, #{payState,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="top.dumbzarro.flyticket.mbg.model.Orders">
    <selectKey keyProperty="ordersId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        flight_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="orderT != null">
        order_t,
      </if>
      <if test="payState != null">
        pay_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        #{flightId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="orderT != null">
        #{orderT,jdbcType=TIMESTAMP},
      </if>
      <if test="payState != null">
        #{payState,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.dumbzarro.flyticket.mbg.model.OrdersExample" resultType="java.lang.Integer">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.ordersId != null">
        orders_id = #{record.ordersId,jdbcType=INTEGER},
      </if>
      <if test="record.flightId != null">
        flight_id = #{record.flightId,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=INTEGER},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=INTEGER},
      </if>
      <if test="record.orderT != null">
        order_t = #{record.orderT,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payState != null">
        pay_state = #{record.payState,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set orders_id = #{record.ordersId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=INTEGER},
      order_t = #{record.orderT,jdbcType=TIMESTAMP},
      pay_state = #{record.payState,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.dumbzarro.flyticket.mbg.model.Orders">
    update orders
    <set>
      <if test="flightId != null">
        flight_id = #{flightId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=INTEGER},
      </if>
      <if test="orderT != null">
        order_t = #{orderT,jdbcType=TIMESTAMP},
      </if>
      <if test="payState != null">
        pay_state = #{payState,jdbcType=BIT},
      </if>
    </set>
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.dumbzarro.flyticket.mbg.model.Orders">
    update orders
    set flight_id = #{flightId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      cost = #{cost,jdbcType=INTEGER},
      order_t = #{orderT,jdbcType=TIMESTAMP},
      pay_state = #{payState,jdbcType=BIT}
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </update>
</mapper>