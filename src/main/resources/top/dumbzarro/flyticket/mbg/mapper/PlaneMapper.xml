<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.dumbzarro.flyticket.mbg.mapper.PlaneMapper">
  <resultMap id="BaseResultMap" type="top.dumbzarro.flyticket.mbg.model.Plane">
    <id column="plane_id" jdbcType="INTEGER" property="planeId" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="plane_name" jdbcType="VARCHAR" property="planeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    plane_id, size, plane_name
  </sql>
  <select id="selectByExample" parameterType="top.dumbzarro.flyticket.mbg.model.PlaneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from plane
    where plane_id = #{planeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from plane
    where plane_id = #{planeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.dumbzarro.flyticket.mbg.model.PlaneExample">
    delete from plane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.dumbzarro.flyticket.mbg.model.Plane">
    insert into plane (plane_id, size, plane_name
      )
    values (#{planeId,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}, #{planeName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.dumbzarro.flyticket.mbg.model.Plane">
    insert into plane
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planeId != null">
        plane_id,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="planeName != null">
        plane_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planeId != null">
        #{planeId,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="planeName != null">
        #{planeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.dumbzarro.flyticket.mbg.model.PlaneExample" resultType="java.lang.Integer">
    select count(*) from plane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update plane
    <set>
      <if test="record.planeId != null">
        plane_id = #{record.planeId,jdbcType=INTEGER},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.planeName != null">
        plane_name = #{record.planeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update plane
    set plane_id = #{record.planeId,jdbcType=INTEGER},
      size = #{record.size,jdbcType=INTEGER},
      plane_name = #{record.planeName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.dumbzarro.flyticket.mbg.model.Plane">
    update plane
    <set>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="planeName != null">
        plane_name = #{planeName,jdbcType=VARCHAR},
      </if>
    </set>
    where plane_id = #{planeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.dumbzarro.flyticket.mbg.model.Plane">
    update plane
    set size = #{size,jdbcType=INTEGER},
      plane_name = #{planeName,jdbcType=VARCHAR}
    where plane_id = #{planeId,jdbcType=INTEGER}
  </update>
</mapper>